Found 3 known vulnerabilities in 2 packages
{"dependencies": [{"name": "asgiref", "version": "3.9.2", "vulns": []}, {"name": "attrs", "version": "25.3.0", "vulns": []}, {"name": "bandit", "version": "1.8.6", "vulns": []}, {"name": "boolean-py", "version": "5.0", "vulns": []}, {"name": "cachecontrol", "version": "0.14.3", "vulns": []}, {"name": "certifi", "version": "2025.8.3", "vulns": []}, {"name": "charset-normalizer", "version": "3.4.3", "vulns": []}, {"name": "cyclonedx-python-lib", "version": "9.1.0", "vulns": []}, {"name": "defusedxml", "version": "0.7.1", "vulns": []}, {"name": "django", "version": "5.0.14", "vulns": [{"id": "GHSA-7xr5-9hcq-chf9", "fix_versions": ["4.2.22", "5.1.10", "5.2.2"], "aliases": ["CVE-2025-48432"], "description": "An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems."}, {"id": "GHSA-6w2r-r2m5-xq5w", "fix_versions": ["4.2.24", "5.1.12", "5.2.6"], "aliases": ["CVE-2025-57833"], "description": "An issue was discovered in Django 4.2 before 4.2.24, 5.1 before 5.1.12, and 5.2 before 5.2.6. FilteredRelation is subject to SQL injection in column aliases, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed QuerySet.annotate() or QuerySet.alias()."}]}, {"name": "django-cors-headers", "version": "4.6.0", "vulns": []}, {"name": "djangorestframework", "version": "3.15.2", "vulns": []}, {"name": "drf-spectacular", "version": "0.27.2", "vulns": []}, {"name": "filelock", "version": "3.19.1", "vulns": []}, {"name": "gunicorn", "version": "22.0.0", "vulns": []}, {"name": "idna", "version": "3.10", "vulns": []}, {"name": "inflection", "version": "0.5.1", "vulns": []}, {"name": "iniconfig", "version": "2.1.0", "vulns": []}, {"name": "jsonschema", "version": "4.25.1", "vulns": []}, {"name": "jsonschema-specifications", "version": "2025.9.1", "vulns": []}, {"name": "license-expression", "version": "30.4.4", "vulns": []}, {"name": "markdown-it-py", "version": "4.0.0", "vulns": []}, {"name": "mdurl", "version": "0.1.2", "vulns": []}, {"name": "msgpack", "version": "1.1.1", "vulns": []}, {"name": "mypy", "version": "1.11.2", "vulns": []}, {"name": "mypy-extensions", "version": "1.1.0", "vulns": []}, {"name": "packageurl-python", "version": "0.17.5", "vulns": []}, {"name": "packaging", "version": "25.0", "vulns": []}, {"name": "pip", "version": "25.0.1", "vulns": [{"id": "GHSA-4xh5-x5gv-qwph", "fix_versions": [], "aliases": ["CVE-2025-8869"], "description": "### Summary  In the fallback extraction path for source distributions, `pip` used Python\u2019s `tarfile` module without verifying that symbolic/hard link targets resolve inside the intended extraction directory. A malicious sdist can include links that escape the target directory and overwrite arbitrary files on the invoking host during `pip install`.  ### Impact  Successful exploitation enables arbitrary file overwrite outside the build/extraction directory on the machine running `pip`. This can be leveraged to tamper with configuration or startup files and may lead to further code execution depending on the environment, but the direct, guaranteed impact is integrity compromise on the vulnerable system.  ### Conditions  The issue is triggered when installing an attacker-controlled sdist (e.g., from an index or URL) and the fallback extraction code path is used. No special privileges are required beyond running `pip install`; active user action is necessary.  ### Remediation  The [fix](https://github.com/pypa/pip/pull/13550), while available as a patch that can be manually applied, has not yet been put into a numbered version but is planned for `25.3`. Using a Python interpreter that implements the safe-extraction behavior described by **PEP 706** provides additional defense in depth for other `tarfile` issues but is not a substitute for upgrading pip for this specific flaw."}]}, {"name": "pip-api", "version": "0.0.34", "vulns": []}, {"name": "pip-audit", "version": "2.9.0", "vulns": []}, {"name": "pip-requirements-parser", "version": "32.0.1", "vulns": []}, {"name": "platformdirs", "version": "4.4.0", "vulns": []}, {"name": "pluggy", "version": "1.6.0", "vulns": []}, {"name": "psycopg2-binary", "version": "2.9.9", "vulns": []}, {"name": "py-serializable", "version": "2.1.0", "vulns": []}, {"name": "pygments", "version": "2.19.2", "vulns": []}, {"name": "pyparsing", "version": "3.2.5", "vulns": []}, {"name": "pytest", "version": "8.3.4", "vulns": []}, {"name": "pytest-django", "version": "4.9.0", "vulns": []}, {"name": "python-dotenv", "version": "1.0.1", "vulns": []}, {"name": "pyyaml", "version": "6.0.3", "vulns": []}, {"name": "referencing", "version": "0.36.2", "vulns": []}, {"name": "requests", "version": "2.32.5", "vulns": []}, {"name": "rich", "version": "14.1.0", "vulns": []}, {"name": "rpds-py", "version": "0.27.1", "vulns": []}, {"name": "ruff", "version": "0.8.4", "vulns": []}, {"name": "sortedcontainers", "version": "2.4.0", "vulns": []}, {"name": "sqlparse", "version": "0.5.3", "vulns": []}, {"name": "stevedore", "version": "5.5.0", "vulns": []}, {"name": "toml", "version": "0.10.2", "vulns": []}, {"name": "typing-extensions", "version": "4.15.0", "vulns": []}, {"name": "uritemplate", "version": "4.2.0", "vulns": []}, {"name": "urllib3", "version": "2.5.0", "vulns": []}], "fixes": []}
