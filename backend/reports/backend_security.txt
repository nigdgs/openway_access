===========================================
BACKEND REVIEW - Security Settings
===========================================
Date: 2025-10-04
Review Type: Security Configuration & Deployment Checks

Current Environment:
--------------------
Active Settings: accessproj.settings.dev (‚ö†Ô∏è DEV mode in container)
DEBUG: True (dev), False (prod) ‚úì
SECRET_KEY: 128 chars from env ‚úì
ALLOWED_HOSTS: localhost,127.0.0.1

Django manage.py check --deploy Results:
=========================================

WITH DEV SETTINGS (current):
----------------------------
7 issues identified:
- security.W004: SECURE_HSTS_SECONDS not set
- security.W008: SECURE_SSL_REDIRECT not True
- security.W012: SESSION_COOKIE_SECURE not True
- security.W016: CSRF_COOKIE_SECURE not True
- security.W018: DEBUG=True in deployment ‚ö†Ô∏è
- drf_spectacular.W002: health/ready views missing serializer (2x)

WITH PROD SETTINGS:
-------------------
‚úÖ Only 2 non-critical warnings (drf_spectacular serializer hints)
‚úÖ All security checks passed!

Security Settings Analysis:
===========================

base.py (Common):
-----------------
‚úì SECRET_KEY: from env with fallback "dev-secret"
  - Current: 128-char hex string ‚úì
  - Issue: Fallback allows weak key if env not set ‚ö†Ô∏è
‚úì DEBUG: False by default
‚úì ALLOWED_HOSTS: from env, defaults to "*" ‚ö†Ô∏è
‚úì MIDDLEWARE: Comprehensive security stack
  - SecurityMiddleware ‚úì
  - CsrfViewMiddleware ‚úì
  - XFrameOptionsMiddleware ‚úì
  - Custom: RequestIdMiddleware, AccessLogMiddleware ‚úì
‚úì DATABASES: PostgreSQL with CONN_MAX_AGE=60 ‚úì
‚úì AUTH_PASSWORD_VALIDATORS: 5 validators including custom history ‚úì

prod.py (Production):
---------------------
‚úÖ DEBUG: False (enforced)
‚úÖ ALLOWED_HOSTS: from env (no wildcard)
‚úÖ SECURE_SSL_REDIRECT: True
‚úÖ SECURE_PROXY_SSL_HEADER: Configured for reverse proxy
‚úÖ HSTS: Enabled (1 year, subdomains, preload)
‚úÖ SESSION_COOKIE_SECURE: True
‚úÖ CSRF_COOKIE_SECURE: True
‚úÖ SESSION_COOKIE_HTTPONLY: True
‚úÖ SECURE_CONTENT_TYPE_NOSNIFF: True
‚úÖ SECURE_BROWSER_XSS_FILTER: True
‚úÖ X_FRAME_OPTIONS: DENY

dev.py (Development):
---------------------
DEBUG: True
ALLOWED_HOSTS: ["*", "testserver"]

DRF Security:
-------------
‚úì DEFAULT_AUTHENTICATION: TokenAuthentication
‚úì DEFAULT_PERMISSION: IsAuthenticated
‚úì THROTTLE_CLASSES: Scoped, User, Anon
‚úì THROTTLE_RATES:
  - access_verify: 30/second (from env)
  - user: 1000/day
  - anon: 100/day

CORS Configuration:
-------------------
‚úì CORS_ALLOWED_ORIGINS: from env with localhost defaults
‚úì CORS_ALLOW_CREDENTIALS: True

Environment Variables (.env):
=============================
POSTGRES_DB=nfc_access ‚úì
POSTGRES_USER=nfc ‚úì
POSTGRES_PASSWORD=nfc üî¥ WEAK PASSWORD!
DB_HOST=db ‚úì
DB_PORT=5432 ‚úì
DJANGO_SECRET_KEY=f1b3f133... (128 chars) ‚úì
DJANGO_SETTINGS_MODULE=accessproj.settings.dev ‚ö†Ô∏è
DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1 ‚úì
ACCESS_VERIFY_RATE=30/second ‚úì

üî¥ CRITICAL ISSUES:
===================
1. POSTGRES_PASSWORD="nfc" - trivial password for database
   - Impact: Easy database compromise
   - Fix: Generate strong password (32+ chars, random)
   - Command: openssl rand -hex 32

üü° HIGH PRIORITY:
=================
1. SECRET_KEY fallback to "dev-secret"
   - Issue: If env var not set, uses weak default
   - Fix: Fail fast if not set in production
   - Patch: Check settings.prod.py enforcement

2. DJANGO_SETTINGS_MODULE=dev in container
   - Issue: Running dev settings with DEBUG=True
   - Fix: Use accessproj.settings.prod for production
   - Impact: Exposes debug info, disabled security headers

3. ALLOWED_HOSTS default to "*" in base.py
   - Issue: Allows any Host header (Host header injection)
   - Fix: Remove default, enforce from env
   - Note: Properly set in current .env ‚úì

üü¢ GOOD PRACTICES:
==================
‚úì Production settings file with all security headers
‚úì HSTS with preload and long duration
‚úì Secure cookies (session, CSRF)
‚úì XSS protection headers
‚úì Comprehensive password validators
‚úì Rate limiting configured
‚úì CORS properly restricted
‚úì Token-based authentication
‚úì Connection pooling (CONN_MAX_AGE)
‚úì Non-root user in Docker (1000:1000)
‚úì Health checks implemented

Middleware Stack Quality:
=========================
Order: ‚úì Correct (Security first, CORS early)
Custom: RequestIdMiddleware, AccessLogMiddleware
Missing: 
  - CSP (Content Security Policy) headers
  - Referrer-Policy header
  - Permissions-Policy header

Recommendations:
================
1. üî¥ URGENT: Change POSTGRES_PASSWORD to strong random value
2. üü° Set DJANGO_SETTINGS_MODULE=accessproj.settings.prod in production
3. üü° Remove SECRET_KEY fallback or make it fail-fast in prod
4. üü° Add CSP headers via django-csp or middleware
5. üü¢ Consider Referrer-Policy and Permissions-Policy headers
6. üü¢ Add security.txt file for responsible disclosure
7. üü¢ Implement rate limiting per IP (currently per user only)
8. üü¢ Add request signing/HMAC for ESP32 access verify calls
9. üü¢ Consider 2FA for admin users
10. üü¢ Rotate DJANGO_SECRET_KEY periodically (with grace period)

Compliance Notes:
=================
OWASP Top 10:
  ‚úì A01:2021 - Broken Access Control (RBAC implemented)
  ‚úì A02:2021 - Cryptographic Failures (HTTPS enforced in prod)
  ‚úì A03:2021 - Injection (parameterized queries, CSRF protection)
  ‚ö† A04:2021 - Insecure Design (weak default password)
  ‚úì A05:2021 - Security Misconfiguration (good prod settings)
  ‚ö† A06:2021 - Vulnerable Components (see CVEs in deps report)
  ‚úì A07:2021 - Auth Failures (strong password validators, token auth)
  ‚úì A08:2021 - Software Integrity (pip requirements pinned)
  ‚ö† A09:2021 - Logging Failures (good logging, but check retention)
  ‚úì A10:2021 - SSRF (no external requests in critical paths)

Next Steps:
===========
1. Create security hardening patch
2. Document production deployment procedure
3. Add pre-deployment checklist
4. Implement automated security tests
5. Set up SAST/DAST in CI/CD

===========================================
Status: COMPLETED - Security reviewed
Critical: 1 (weak DB password)
High: 3 (SECRET_KEY fallback, dev mode, allowed hosts)
Medium: 5 (headers, rate limiting enhancements)
===========================================

